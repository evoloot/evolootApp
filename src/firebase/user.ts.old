import * as firebase from 'firebase';
export namespace Auth {
  export const setDefaultLanguage = () => firebase.auth().useDeviceLanguage();
  export const signInWithEmailAndPassword = 
    (email:string, password:string) => {
      return firebase.auth().signInWithEmailAndPassword(email, password);
    };

  export const facebookProvider = () => new firebase.auth.FacebookAuthProvider();
  export const twitterProvider = () => new firebase.auth.TwitterAuthProvider();
  export const githubProvider = () => new firebase.auth.GithubAuthProvider();
  export const createUserWithEmailAndPassword = (email:string, password:string) => {
    return firebase.auth().createUserWithEmailAndPassword(email, password);
  }

  export const createUserWithEmailAndPasswordCredentials = 
    (email:string, password:string) => {
      return firebase.auth().createUserAndRetrieveDataWithEmailAndPassword(email, password);
    };

  export const signInWithEmailLink = (email:string) => {
    return firebase.auth().signInWithEmailLink(email);
  }

  export const signInWithPhoneNumber = (number:string, authenticator) => {
    return firebase.auth().signInWithPhoneNumber(number,authenticator);
  }

  export const signInWithPopup = (provider) => {
    return firebase.auth().signInWithPopup(provider);
  }

  export const signInWithRedirect = (provider) => {
    return firebase.auth().signInWithRedirect(provider);
  }

  export const signInWithFacebookPopup = () => signInWithPopup(facebookProvider());
  export const signInWithFacebookRedirect = () => signInWithRedirect(facebookProvider());

  export const signInWithTwitterPopup = () => signInWithPopup(twitterProvider());
  export const signInWithTwitterRedirect = () => signInWithRedirect(twitterProvider());

  export const signOut = () => firebase.auth().signOut();
}